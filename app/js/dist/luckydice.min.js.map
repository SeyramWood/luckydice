{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/howler/dist/howler.js","webpack:///(webpack)/buildin/global.js","webpack:///./app/js/src/game.js","webpack:///./app/js/src/level-one.js","webpack:///./app/js/src/level-two.js","webpack:///./app/js/src/level-three.js","webpack:///./app/js/src/render-game-levels.js","webpack:///./app/js/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","HowlerGlobal","this","init","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","_resumeAfterSuspend","Howl","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhrWithCredentials","xhrWithCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","stop","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","splice","remCache","cache","on","events","off","isId","keys","Array","isArray","msg","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","withCredentials","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","standalone","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","g","Function","Game","options","querySelectorAll","throwDiceButton","querySelector","levelsContainer","resetGameButton","guessedValue","points","randomValue","levelString","localStorage","getItem","setItem","arr","reduce","accumulator","currentVal","floor","random","guess","rand","message","alert","createElement","className","setAttribute","innerText","prepend","remove","LevelOne","levelOneContainer","levelOneFirstContainer","levelOneHeader","levelOneRoundOneHeader","displayGuess","displayRandom","displayStatus","levelOne","textContent","innerHTML","appendChild","el","LevelTwo","levelTwo","levelTwoContainer","levelTwoFirstContainer","levelTwoSecondContainer","levelTwoHeader","levelTwoRoundOneHeader","statusButton","levelTwoRoundTwoHeader","displayGuessSecond","displayRandomSecond","displayStatusSecond","LevelThree","levelThree","levelThreeContainer","levelThreeFirstContainer","levelThreeSecondContainer","levelThreeThirdContainer","levelThreeHeader","levelThreeRoundOneHeader","levelThreeRoundTwoHeader","statusButtonSecond","levelThreeRoundThreeHeader","displayGuessThird","displayRandomThird","displayStatusThird","RenderGameLevels","checkGameLevel","generateDom","generateDomSecond","generateDomThird","game","counter","disabled","forEach","button","removeAttribute","target","renderGuessedValueRoundOne","renderGuessedValueRoundTwo","renderGuessedValueRoundThree","renderGuessedValue","counter2","checkRoundWin","refreshGame","resetGame","randomNumber","isRoundWin","accumulatePoints","messagePopover","cancelGame","continueGame","changeLevel","messageQuestion","displayErrorMessage","log","Pizzicato","path"],"mappings":"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","file":"luckydice.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"app/js/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*!\n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export default class Game{\r\n    constructor(){\r\n        this.options = document.querySelectorAll(\".options > .option\");\r\n        this.throwDiceButton = document.querySelector(\"#throwDice\");\r\n        this.levelsContainer = document.querySelector(\"#game__container__levels\");\r\n        this.resetGameButton = document.querySelector(\"#resetGame\");\r\n        this.guessedValue = [];\r\n        this.points = [];\r\n        this.randomValue = '';\r\n\r\n        this.levelString = localStorage.getItem('gameLevel');\r\n        if(this.levelString === null){\r\n            localStorage.setItem('gameLevel', '1')\r\n        }\r\n    }\r\n    accumulatePoints(arr){\r\n        const reducer = (accumulator, currentVal) => accumulator + currentVal;\r\n        return arr.reduce(reducer);\r\n    }\r\n    get checkGameLevel(){\r\n        let levelString = localStorage.getItem('gameLevel');\r\n        if(levelString !== null){\r\n            return parseInt(levelString);\r\n        }\r\n    }\r\n    randomNumber(){\r\n        return Math.floor(Math.random()*6) + 1; //return random integers from 1 to 6\r\n    }\r\n    isRoundWin(guess , rand) {\r\n        return guess === rand;\r\n        \r\n    }\r\n    displayErrorMessage(message){\r\n        const alert = document.createElement('div');\r\n        alert.className ='error-message animate--moveInLeft';\r\n        alert.setAttribute('id','error-message');\r\n        alert.innerText = message;\r\n        document.querySelector('body').prepend(alert);\r\n        setTimeout(()=>{\r\n            document.querySelector('#error-message').remove();\r\n        },4000)\r\n    }\r\n    resetGame(){\r\n        this.guessedValue = [];\r\n        this.points = [];\r\n        this.randomValue = '';\r\n    }\r\n}\r\n\r\n\r\n\r\n","import Game from './game';\r\n\r\nexport default class LevelOne extends Game{\r\n    constructor(){\r\n        super()\r\n        this.levelOneContainer = document.createElement('div');\r\n        this.levelOneFirstContainer = document.createElement('div');\r\n        this.levelOneHeader = document.createElement('h3');\r\n        this.levelOneRoundOneHeader = document.createElement('h3');\r\n        this.displayGuess = document.createElement('div');\r\n        this.displayRandom = document.createElement('div');\r\n        this.displayStatus = document.createElement('div');\r\n        this.levelOneContainer.setAttribute('class', 'game__container__levels__wrapper');\r\n        this.levelOneContainer.setAttribute('id', 'game__container__levels__wrapper');\r\n\r\n        this.levelOne = 1;\r\n    }\r\n    generateDom(){\r\n        this.levelOneFirstContainer.setAttribute('id', 'level__one');\r\n        this.levelOneFirstContainer.setAttribute('class', 'level');\r\n        this.levelOneRoundOneHeader.textContent ='Round 1';\r\n        this.displayGuess.textContent = `Player `;\r\n        this.displayRandom.textContent = `Computer `;\r\n        this.displayStatus.textContent = `Status `;\r\n\r\n        this.displayGuess.innerHTML = `<span>Player</span> <span id=\"guess11\"></span>`;\r\n        this.displayRandom.innerHTML = `<span>Computer</span> <span id=\"computer11\"></span>`;\r\n        this.displayStatus.innerHTML = `<span>Status</span> <span id=\"status11\"></span>`;\r\n\r\n        this.levelOneFirstContainer.appendChild(this.levelOneRoundOneHeader);\r\n        this.levelOneFirstContainer.appendChild(this.displayGuess);\r\n        this.levelOneFirstContainer.appendChild(this.displayRandom);\r\n        this.levelOneFirstContainer.appendChild(this.displayStatus);\r\n        this.levelOneContainer.appendChild(this.levelOneFirstContainer);\r\n        this.levelsContainer.appendChild(this.levelOneContainer);\r\n    }\r\n    renderGuessedValue(value){\r\n        const el = document.querySelector('#guess11');\r\n        el.setAttribute('class', 'btn btn-rounded2');\r\n        el.textContent =  `${value}`;\r\n        //console.log(this.guessedValue[0])\r\n    }\r\n}","import Game from './game';\r\nexport default class LevelTwo extends Game{\r\n    constructor(){\r\n        super();\r\n        this.levelTwo = 2;\r\n        this.levelTwoContainer = document.createElement('div');\r\n        this.levelTwoFirstContainer = document.createElement('div');\r\n        this.levelTwoSecondContainer = document.createElement('div');\r\n        this.levelTwoHeader = document.createElement('h3');\r\n        this.levelTwoContainer.setAttribute('class', 'game__container__levels__wrapper')\r\n        this.levelTwoContainer.setAttribute('id', 'game__container__levels__wrapper')\r\n\r\n        this.levelTwoRoundOneHeader = document.createElement('h4');\r\n        this.displayGuess = document.createElement('div');\r\n        this.displayRandom = document.createElement('div');\r\n        this.displayStatus = document.createElement('div');\r\n        this.statusButton = document.createElement('span');\r\n\r\n        this.levelTwoRoundTwoHeader = document.createElement('h4');\r\n        this.displayGuessSecond = document.createElement('div');\r\n        this.displayRandomSecond = document.createElement('div');\r\n        this.displayStatusSecond = document.createElement('div');\r\n    }\r\n    generateDom(){\r\n        this.levelTwoFirstContainer.setAttribute('id', 'round__one');\r\n        this.levelTwoFirstContainer.setAttribute('class', 'level');\r\n        this.levelTwoRoundOneHeader.textContent = 'Round 1'\r\n        this.displayGuess.textContent = `Player`;\r\n        this.displayRandom.textContent = `Computer `;\r\n        this.displayStatus.textContent = `Status `;\r\n\r\n        this.displayGuess.innerHTML = `<span>Player</span> <span id=\"guess21\"></span>`;\r\n        this.displayRandom.innerHTML = `<span>Computer</span> <span id=\"computer21\"></span>`;\r\n        this.displayStatus.innerHTML = `<span>Status</span> <span id=\"status21\"></span>`;\r\n\r\n        this.levelTwoFirstContainer.appendChild(this.levelTwoRoundOneHeader);\r\n        this.levelTwoFirstContainer.appendChild(this.displayGuess);\r\n        this.levelTwoFirstContainer.appendChild(this.displayRandom);\r\n        this.levelTwoFirstContainer.appendChild(this.displayStatus);\r\n        this.levelTwoContainer.appendChild(this.levelTwoFirstContainer)\r\n        this.levelsContainer.appendChild(this.levelTwoContainer)\r\n    }\r\n    generateDomSecond(){\r\n        this.levelTwoSecondContainer.setAttribute('id', 'round__two');\r\n        this.levelTwoSecondContainer.setAttribute('class', 'level');\r\n        this.levelTwoRoundTwoHeader.textContent = 'Round 2'\r\n        this.displayGuessSecond.textContent = `Player `;\r\n        this.displayRandomSecond.textContent = `Computer `;\r\n        this.displayStatusSecond.textContent = `Status `;\r\n\r\n        this.displayGuessSecond.innerHTML = `<span>Player</span> <span id=\"guess22\"></span>`;\r\n        this.displayRandomSecond.innerHTML = `<span>Computer</span> <span id=\"computer22\"></span>`;\r\n        this.displayStatusSecond.innerHTML = `<span>Status</span> <span id=\"status22\"></span>`;\r\n\r\n        this.levelTwoSecondContainer.appendChild(this.levelTwoRoundTwoHeader);\r\n        this.levelTwoSecondContainer.appendChild(this.displayGuessSecond);\r\n        this.levelTwoSecondContainer.appendChild(this.displayRandomSecond);\r\n        this.levelTwoSecondContainer.appendChild(this.displayStatusSecond);\r\n        this.levelTwoContainer.appendChild(this.levelTwoSecondContainer)\r\n        this.levelsContainer.appendChild(this.levelTwoContainer)\r\n    }\r\n\r\n    renderGuessedValueRoundOne(value){\r\n        const el = document.querySelector('#guess21');\r\n        el.setAttribute('class', 'btn btn-rounded2');\r\n        el.textContent =  `${value}`;\r\n    \r\n    }\r\n    renderGuessedValueRoundTwo(value){\r\n        const el = document.querySelector('#guess22');\r\n        el.setAttribute('class', 'btn btn-rounded2');\r\n        el.textContent =  `${value}`;\r\n    }\r\n}","import Game from './game';\r\n\r\nexport default class LevelThree extends Game{\r\n    constructor(){\r\n        super();\r\n        this.levelThree = 3;\r\n        this.levelThreeContainer = document.createElement('div');\r\n        this.levelThreeFirstContainer = document.createElement('div');\r\n        this.levelThreeSecondContainer = document.createElement('div');\r\n        this.levelThreeThirdContainer = document.createElement('div');\r\n        this.levelThreeHeader = document.createElement('h3');\r\n        this.levelThreeContainer.setAttribute('class', 'game__container__levels__wrapper')\r\n        this.levelThreeContainer.setAttribute('id', 'game__container__levels__wrapper')\r\n\r\n        this.levelThreeRoundOneHeader = document.createElement('h4');\r\n        this.displayGuess = document.createElement('div');\r\n        this.displayRandom = document.createElement('div');\r\n        this.displayStatus = document.createElement('div');\r\n\r\n        this.levelThreeRoundTwoHeader = document.createElement('h4');\r\n        this.displayGuessSecond = document.createElement('div');\r\n        this.displayRandomSecond = document.createElement('div');\r\n        this.displayStatusSecond = document.createElement('div');\r\n        this.statusButtonSecond = document.createElement('span');\r\n        \r\n        this.levelThreeRoundThreeHeader = document.createElement('h4');\r\n        this.displayGuessThird = document.createElement('div');\r\n        this.displayRandomThird = document.createElement('div');\r\n        this.displayStatusThird = document.createElement('div');\r\n    }\r\n    generateDom(){\r\n        this.levelThreeFirstContainer.setAttribute('id', 'round__one');\r\n        this.levelThreeRoundOneHeader.textContent = 'Round 1'\r\n        this.levelThreeFirstContainer.setAttribute('class', 'level');\r\n        this.displayGuess.textContent = `Player`;\r\n        this.displayRandom.textContent = `Computer `;\r\n        this.displayStatus.textContent = `Status `;\r\n\r\n        this.displayGuess.innerHTML = `<span>Player</span> <span id=\"guess31\"></span>`;\r\n        this.displayRandom.innerHTML = `<span>Computer</span> <span id=\"computer31\"></span>`;\r\n        this.displayStatus.innerHTML = `<span>Status</span> <span id=\"status31\"></span>`;\r\n\r\n        this.levelThreeFirstContainer.appendChild(this.levelThreeRoundOneHeader);\r\n        this.levelThreeFirstContainer.appendChild(this.displayGuess);\r\n        this.levelThreeFirstContainer.appendChild(this.displayRandom);\r\n        this.levelThreeFirstContainer.appendChild(this.displayStatus);\r\n        this.levelThreeContainer.appendChild(this.levelThreeFirstContainer);\r\n        this.levelsContainer.appendChild(this.levelThreeContainer)\r\n    }\r\n    generateDomSecond(){\r\n        this.levelThreeSecondContainer.setAttribute('id', 'round__two');\r\n        this.levelThreeSecondContainer.setAttribute('class', 'level');\r\n        this.levelThreeRoundTwoHeader.textContent = 'Round 2'\r\n        this.displayGuessSecond.textContent = `Player `;\r\n        this.displayRandomSecond.textContent = `Computer `;\r\n        this.displayStatusSecond.textContent = `Status `;\r\n\r\n        this.displayGuessSecond.innerHTML = `<span>Player</span> <span id=\"guess32\"></span>`;\r\n        this.displayRandomSecond.innerHTML = `<span>Computer</span> <span id=\"computer32\"></span>`;\r\n        this.displayStatusSecond.innerHTML = `<span>Status</span> <span id=\"status32\"></span>`;\r\n\r\n        this.levelThreeSecondContainer.appendChild(this.levelThreeRoundTwoHeader);\r\n        this.levelThreeSecondContainer.appendChild(this.displayGuessSecond);\r\n        this.levelThreeSecondContainer.appendChild(this.displayRandomSecond);\r\n        this.levelThreeSecondContainer.appendChild(this.displayStatusSecond);\r\n        this.levelThreeContainer.appendChild(this.levelThreeSecondContainer);\r\n        this.levelsContainer.appendChild(this.levelThreeContainer)\r\n    }\r\n    generateDomThird(){\r\n        this.levelThreeThirdContainer.setAttribute('id', 'round__three');\r\n        this.levelThreeThirdContainer.setAttribute('class', 'level');\r\n        this.levelThreeRoundThreeHeader.textContent = 'Round 3'\r\n        this.displayGuessThird.textContent = `Player `;\r\n        this.displayRandomThird.textContent = `Computer `;\r\n        this.displayStatusThird.textContent = `Status `;\r\n\r\n        this.displayGuessThird.innerHTML = `<span>Player</span> <span id=\"guess33\"></span>`;\r\n        this.displayRandomThird.innerHTML = `<span>Computer</span> <span id=\"computer33\"></span>`;\r\n        this.displayStatusThird.innerHTML = `<span>Status</span> <span id=\"status33\"></span>`;\r\n\r\n        this.levelThreeThirdContainer.appendChild(this.levelThreeRoundThreeHeader);\r\n        this.levelThreeThirdContainer.appendChild(this.displayGuessThird);\r\n        this.levelThreeThirdContainer.appendChild(this.displayRandomThird);\r\n        this.levelThreeThirdContainer.appendChild(this.displayStatusThird);\r\n        this.levelThreeContainer.appendChild(this.levelThreeThirdContainer);\r\n        this.levelsContainer.appendChild(this.levelThreeContainer)\r\n    }\r\n    renderGuessedValueRoundOne(value){\r\n        const el = document.querySelector('#guess31');\r\n        el.setAttribute('class', 'btn btn-rounded2');\r\n        el.textContent =  `${value}`;\r\n    }\r\n    renderGuessedValueRoundTwo(value){\r\n        const el = document.querySelector('#guess32');\r\n            el.setAttribute('class', 'btn btn-rounded2');\r\n            el.textContent =  `${value}`;\r\n    }\r\n    renderGuessedValueRoundThree(value){\r\n        const el = document.querySelector('#guess33');\r\n        el.setAttribute('class', 'btn btn-rounded2');\r\n        el.textContent =  `${value}`;\r\n    }\r\n}","import Game from './game';\r\nimport LevelOne from './level-one';\r\nimport LevelTwo from './level-two';\r\nimport LevelThree from './level-three';\r\n\r\nexport default class RenderGameLevels extends Game{\r\n    constructor(){\r\n        super();\r\n        this.levelOne = new LevelOne();\r\n        this.levelTwo = new LevelTwo();\r\n        this.levelThree = new LevelThree();\r\n        if (this.checkGameLevel === this.levelThree.levelThree){\r\n            this.levelThree.generateDom();\r\n            this.levelThree.generateDomSecond();\r\n            this.levelThree.generateDomThird();\r\n        }\r\n        else if (this.checkGameLevel === this.levelTwo.levelTwo){\r\n            this.levelTwo.generateDom();\r\n            this.levelTwo.generateDomSecond();\r\n        }\r\n        else{\r\n            this.levelOne.generateDom();\r\n        }\r\n    }\r\n}","'use strict'\r\n\r\nimport {Howl, Howler} from 'howler';\r\nimport Game from './game';\r\n//import Sound from './sound';\r\nimport LevelOne from './level-one';\r\nimport LevelTwo from './level-two';\r\nimport LevelThree from './level-three';\r\nimport RenderGameLevels from './render-game-levels';\r\n\r\n//const sound = new Sound();\r\nconst game = new Game();\r\nconst levelOne = new LevelOne();\r\nconst levelTwo = new LevelTwo();\r\nconst levelThree = new LevelThree();\r\nnew RenderGameLevels();\r\n\r\n\r\nlet counter = 1\r\ngame.throwDiceButton.disabled = true;\r\ngame.throwDiceButton.setAttribute('style','color:#555')\r\ngame.options.forEach((button) => {\r\n    button.addEventListener('click', (e) => {\r\n        game.throwDiceButton.disabled = false;\r\n        game.throwDiceButton.removeAttribute('style')\r\n\r\n       if (game.checkGameLevel === levelThree.levelThree){\r\n            if (counter === 1) {\r\n                game.guessedValue[0] = parseInt(e.target.textContent);\r\n                levelThree.renderGuessedValueRoundOne(game.guessedValue[0])\r\n                counter++;\r\n            }\r\n            else if (counter === 2){\r\n                game.guessedValue[1] = parseInt(e.target.textContent);\r\n                levelThree.renderGuessedValueRoundTwo(game.guessedValue[1])\r\n                counter++;\r\n            }\r\n            else if (counter === 3){\r\n                game.guessedValue[2] = parseInt(e.target.textContent);\r\n                levelThree.renderGuessedValueRoundThree(game.guessedValue[2])\r\n                counter = 1;\r\n            }\r\n       }\r\n       else if (game.checkGameLevel === levelTwo.levelTwo){\r\n            if (counter === 1) {\r\n                game.guessedValue[0] = parseInt(e.target.textContent);\r\n                levelTwo.renderGuessedValueRoundOne(game.guessedValue[0])\r\n                counter++; \r\n            }\r\n            else if (counter === 2){\r\n                game.guessedValue[1] = parseInt(e.target.textContent);\r\n                levelTwo.renderGuessedValueRoundTwo(game.guessedValue[1])\r\n                counter = 1; \r\n            }\r\n       }\r\n       else if (game.checkGameLevel === levelOne.levelOne){\r\n            game.guessedValue[0] = parseInt(e.target.textContent);\r\n            levelOne.renderGuessedValue(game.guessedValue[0])\r\n            counter = 1; \r\n       } \r\n    })\r\n});\r\n\r\n\r\nlet counter2 = 1\r\nlet checkRoundWin = 0\r\n\r\nconst refreshGame = function() {\r\n    counter = 1\r\n    counter2 = 1\r\n    game.throwDiceButton.disabled = true;\r\n    game.throwDiceButton.setAttribute('style','color:#555')\r\n    game.resetGame();\r\n}\r\n\r\ngame.throwDiceButton.addEventListener('click', () => {\r\n    document.querySelector('#dice').setAttribute('class', 'rotate-dice')\r\n    checkRoundWin = 0\r\n    setTimeout(() => {\r\n        if (game.checkGameLevel === levelThree.levelThree){\r\n            let randomValue = game.randomNumber()\r\n            if (counter2 === 1) {\r\n                let el = document.querySelector('#computer31')\r\n                    el.setAttribute('class', 'btn btn-rounded2');\r\n                    el.textContent =  randomValue;\r\n                if(!game.isRoundWin(game.guessedValue[0], randomValue)){\r\n                    game.points[0] = 0;\r\n                    let el = document.querySelector('#status31')\r\n                    el.setAttribute('class', 'btn btn-danger');\r\n                    el.textContent =  `Loss`;\r\n                }else{\r\n                    game.points[0] = 1;\r\n                    let el = document.querySelector('#status31')\r\n                    el.setAttribute('class', 'btn btn-success');\r\n                    el.textContent =  `Win`;\r\n                    game.guessedValue = []\r\n                }\r\n                counter2++;\r\n            }\r\n            else if (counter2 === 2){\r\n                let randomValue = game.randomNumber()\r\n                let el = document.querySelector('#computer32')\r\n                    el.setAttribute('class', 'btn btn-rounded2');\r\n                    el.textContent =  randomValue;\r\n                if(!game.isRoundWin(game.guessedValue[1], randomValue)){\r\n                    game.points[1] = 0;\r\n                    let el = document.querySelector('#status32')\r\n                    el.setAttribute('class', 'btn btn-danger');\r\n                    el.textContent =  `Loss`;\r\n                }else{\r\n                    game.points[1] = 1;\r\n                    let el = document.querySelector('#status32')\r\n                    el.setAttribute('class', 'btn btn-success');\r\n                    el.textContent =  `Win`;\r\n                    game.guessedValue = []\r\n                }\r\n                counter2++;\r\n            }\r\n            else if (counter2 === 3){\r\n                const randomValue = game.randomNumber()\r\n                const el = document.querySelector('#computer33')\r\n                    el.setAttribute('class', 'btn btn-rounded2');\r\n                    el.textContent =  randomValue;\r\n                if(!game.isRoundWin(game.guessedValue[2], randomValue)){\r\n                    game.points[2] = 0;\r\n                    let el = document.querySelector('#status33')\r\n                    el.setAttribute('class', 'btn btn-danger');\r\n                    el.textContent =  `Loss`;\r\n                }else{\r\n                    game.points[2] = 1\r\n                    let el = document.querySelector('#status33')\r\n                    el.setAttribute('class', 'btn btn-success');\r\n                    el.textContent =  `Win`;\r\n                    game.guessedValue = []\r\n                }\r\n                counter2 = 1;\r\n                checkRoundWin = 1\r\n            }\r\n            if (game.accumulatePoints(game.points) === 3) {\r\n                const messagePopover = document.querySelector('#messagePopover');\r\n                const cancelGame = document.querySelector('#cancelGame');\r\n                const continueGame = document.querySelector('#continueGame');\r\n                const changeLevel = document.querySelector('#changeLevel');\r\n                const messageQuestion = document.querySelector('#messageQuestion');\r\n                changeLevel.textContent = 'Level 3';\r\n                messageQuestion.textContent = 'Start over again ?';\r\n                setTimeout(() => {\r\n                    messagePopover.setAttribute('class', 'popover show'); \r\n                }, 800);\r\n                cancelGame.addEventListener('click', () => {\r\n                    messagePopover.setAttribute('class', 'popover');\r\n                })\r\n                continueGame.addEventListener('click', () => {\r\n                    localStorage.setItem('gameLevel', '1');\r\n                    document.querySelector('#game__container__levels__wrapper').remove();\r\n                    messageQuestion.textContent = 'Continue to next level ?';\r\n                    messagePopover.setAttribute('class', 'popover');\r\n                    refreshGame();\r\n                    new RenderGameLevels();\r\n                })\r\n            }else if (checkRoundWin === 1 ){\r\n                game.displayErrorMessage('Ooops!!! try again');\r\n            }\r\n        }\r\n        else if (game.checkGameLevel === levelTwo.levelTwo){\r\n            const randomValue = game.randomNumber()\r\n            if (counter2 === 1) {\r\n                const el = document.querySelector('#computer21')\r\n                    el.setAttribute('class', 'btn btn-rounded2');\r\n                    el.textContent =  randomValue;\r\n                if(!game.isRoundWin(game.guessedValue[0], randomValue)){\r\n                    game.points[0] = 0\r\n                    let el = document.querySelector('#status21')\r\n                    el.setAttribute('class', 'btn btn-danger');\r\n                    el.textContent =  `Loss`;\r\n                }else{\r\n                    game.points[0] = 1\r\n                    let el = document.querySelector('#status21')\r\n                    el.setAttribute('class', 'btn btn-success');\r\n                    el.textContent =  `Win`;\r\n                    game.guessedValue = []\r\n                    localStorage.setItem('gameLevel', '2');\r\n                }\r\n                counter2++;\r\n            }\r\n            else if (counter2 === 2){\r\n                const randomValue = game.randomNumber()\r\n                const el = document.querySelector('#computer22')\r\n                    el.setAttribute('class', 'btn btn-rounded2');\r\n                    el.textContent =  randomValue;\r\n                if(!game.isRoundWin(game.guessedValue[1], randomValue)){\r\n                    game.points[1] = 0\r\n                    let el = document.querySelector('#status22')\r\n                    el.setAttribute('class', 'btn btn-danger');\r\n                    el.textContent =  `Loss`;\r\n                }else{\r\n                    game.points[1] = 1\r\n                    let el = document.querySelector('#status22')\r\n                    el.setAttribute('class', 'btn btn-success');\r\n                    el.textContent =  `Win`;\r\n                    game.guessedValue = []\r\n                    localStorage.setItem('gameLevel', '2');\r\n                }\r\n                counter2 = 1;\r\n                checkRoundWin = 1;\r\n            }\r\n            if (game.accumulatePoints(game.points) === 2) {\r\n                const messagePopover = document.querySelector('#messagePopover');\r\n                const cancelGame = document.querySelector('#cancelGame');\r\n                const continueGame = document.querySelector('#continueGame');\r\n                const changeLevel = document.querySelector('#changeLevel');\r\n                changeLevel.textContent = 'Level 2';\r\n                setTimeout(() => {\r\n                    messagePopover.setAttribute('class', 'popover show'); \r\n                }, 800);\r\n                cancelGame.addEventListener('click', () => {\r\n                    messagePopover.setAttribute('class', 'popover');\r\n                })\r\n                continueGame.addEventListener('click', () => {\r\n                    localStorage.setItem('gameLevel', '3');\r\n                    document.querySelector('#game__container__levels__wrapper').remove();\r\n                    messagePopover.setAttribute('class', 'popover');\r\n                    refreshGame();\r\n                    new RenderGameLevels();\r\n                })\r\n            }\r\n            else if (checkRoundWin === 1 ){\r\n                game.displayErrorMessage('Ooops!!! try again');\r\n            }\r\n        }\r\n        else if (game.checkGameLevel === levelOne.levelOne){\r\n            const randomValue = game.randomNumber()\r\n            const el = document.querySelector('#computer11')\r\n                    el.setAttribute('class', 'btn btn-rounded2');\r\n                    el.textContent =  randomValue;\r\n            if(!game.isRoundWin(game.guessedValue[0], randomValue)){\r\n                game.points[0] = 0;\r\n                const el = document.querySelector('#status11')\r\n                    el.setAttribute('class', 'btn btn-danger');\r\n                    el.textContent =  `Loss`;\r\n                    counter2 = 1;\r\n                    checkRoundWin = 1;\r\n            }else{\r\n                game.points[0] = 1\r\n                game.guessedValue = []\r\n                const el = document.querySelector('#status11')\r\n                    el.setAttribute('class', 'btn btn-success');\r\n                    el.textContent =  `Win`;\r\n                    counter2 = 1;\r\n                    checkRoundWin = 1;\r\n            }\r\n            if (game.accumulatePoints(game.points) === 1) {\r\n                const popover = document.querySelector('#messagePopover');\r\n                const cancelGame = document.querySelector('#cancelGame');\r\n                const continueGame = document.querySelector('#continueGame');\r\n                const changeLevel = document.querySelector('#changeLevel');\r\n                changeLevel.textContent = 'Level 1';\r\n                setTimeout(() => {\r\n                    messagePopover.setAttribute('class', 'popover show'); \r\n                }, 800);\r\n                cancelGame.addEventListener('click', () => {\r\n                    messagePopover.setAttribute('class', 'popover');\r\n                })\r\n                continueGame.addEventListener('click', () => {\r\n                    localStorage.setItem('gameLevel', '2');\r\n                    document.querySelector('#game__container__levels__wrapper').remove();\r\n                    messagePopover.setAttribute('class', 'popover');\r\n                    refreshGame();\r\n                    new RenderGameLevels();\r\n                })\r\n            }else{\r\n                game.displayErrorMessage('Ooops!!! try again');\r\n            }\r\n        }\r\n        document.querySelector('#dice').setAttribute('class', ''); \r\n    }, 2000);\r\n});\r\n\r\ngame.resetGameButton.addEventListener('click', () => {\r\n    refreshGame();\r\n    document.querySelector('#game__container__levels__wrapper').remove();\r\n    new RenderGameLevels();\r\n});\r\n\r\nconst url = document.createElement('a')\r\nurl.setAttribute('href','bell_ring.mp3')\r\nconsole.log(url)\r\nconst sound = new Pizzicato.Sound({\r\n    source: 'file',\r\n    options: {path: './sounds/bell_ring.mp3'}\r\n},function () {\r\n    console.log('sound loaded')\r\n})\r\nsound.play()\r\n\r\n\r\n"],"sourceRoot":""}